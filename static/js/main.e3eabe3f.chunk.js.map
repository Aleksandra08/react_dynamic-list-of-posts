{"version":3,"sources":["components/User.js","components/Comments.js","components/CommentList.js","components/Post.js","components/PostList.js","api/getData.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","username","email","Comments","comments","map","comment","key","id","href","body","CommentList","components_Comments","Post","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showComments","setState","prev","showListComments","state","post","title","components_User","type","onClick","components_CommentList","React","Component","PostList","posts","filter","placeholder","onChange","components_Post","BASE_URL","App","onLoad","disable","delayPromise","Promise","resolve","setTimeout","dataPromise","loadData","then","isLoaded","filterPosts","event","currentValue","target","value","toUpperCase","postsWithFilter","includes","filteredPosts","all","fetch","concat","response","json","users","postWithAllData","objectSpread","find","userId","postId","components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e3eabe3f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  return (\n    <div className=\"post__users-data\">\n      <h4 className=\"post__users-data_autor\">Autor:</h4>\n      <div>\n        <div>{user.name}</div>\n        <div>{user.username}</div>\n        <div>{user.email}</div>\n      </div>\n    </div>\n  );\n}\nUser.propTypes = {\n  user: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Comments({ comments }) {\n  return (\n    <div>\n      {comments.map(comment => (\n        <div key={comment.id} className=\"post__comment\">\n          <div className=\"post__comment-autor\">\n            <div>\n              {comment.name}\n            </div>\n            <a\n              href={comment.email}\n              className=\"post__comment-link\"\n            >\n              {comment.email}\n            </a>\n          </div>\n          <div>\n            {comment.body}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nComments.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default Comments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comments';\n\nfunction CommentList({ comments }) {\n  return (\n    <Comments comments={comments} />\n  );\n}\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showListComments: false,\n    };\n  }\n\n  showComments = () => {\n    this.setState(prev => ({\n      showListComments: !prev.showListComments,\n    }));\n  };\n\n  render() {\n    const { post } = this.props;\n    return (\n      <div className=\"post\">\n        <h2 className=\"post__title\">{post.title}</h2>\n        <p className=\"post__body\">\n          {post.body}\n        </p>\n        <User user={post.user} />\n        <button\n          type=\"button\"\n          className=\"post__comment_btn\"\n          onClick={this.showComments}\n        >\n          Comments\n        </button>\n        {this.state.showListComments\n          ? <CommentList comments={post.comments} />\n          : null}\n      </div>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nfunction PostList({ posts, filter }) {\n  return (\n    <div className=\"list\">\n      <input\n        className=\"filter-field\"\n        placeholder=\"enter posts title...\"\n        type=\"text\"\n        onChange={filter}\n      />\n\n      {posts.map(post => (\n        <Post\n          post={post}\n          key={post.id}\n        />\n      ))}\n    </div>\n  );\n}\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filter: PropTypes.func,\n};\n\nexport default PostList;\n","const BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getPosts = () => fetch(`${BASE_URL}/posts`).then(response => response.json());\n\nexport const getUsers = () => fetch(`${BASE_URL}/users`).then(response => response.json());\n\nexport const getComments = () => fetch(`${BASE_URL}/comments`).then(response => response.json());\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\nimport { getPosts, getUsers, getComments } from './api/getData';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      disable: false,\n      posts: [],\n      filteredPosts: [],\n    };\n  }\n\n  onLoad = () => {\n    this.setState(prev => ({\n      disable: !prev.disable,\n    }));\n\n    const delayPromise = new Promise((resolve) => {\n      setTimeout(resolve, 600);\n    });\n\n    const dataPromise = this.loadData();\n\n    delayPromise\n      .then(() => dataPromise)\n      .then(() => {\n        this.setState({ isLoaded: true });\n      });\n  };\n\n  filterPosts = (event) => {\n    const currentValue = event.target.value.toUpperCase();\n    const postsWithFilter = this.state.posts\n      .filter(post => post.title.toUpperCase().includes(currentValue));\n\n    this.setState({\n      filteredPosts: postsWithFilter,\n    });\n  };\n\n  async loadData() {\n    const [posts, users, comments] = await Promise.all(\n      [getPosts(), getUsers(), getComments()]\n    );\n    const postWithAllData = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n    this.setState({\n      posts: postWithAllData,\n      filteredPosts: postWithAllData,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"box-of-posts\">\n        <h1 className=\"title\"> Dynamic list of posts </h1>\n        {this.state.isLoaded ? (\n          <PostList\n            posts={this.state.filteredPosts}\n            filter={this.filterPosts}\n          />\n        )\n          : (\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={this.onLoad}\n            >\n              {this.state.disable ? 'Loading...' : 'Load'}\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}